name: 'GitHub Issues to Weaviate'
description: 'Reads GitHub issues and vectorizes them into a Weaviate instance'
author: 'Weaviate'

inputs:
  weaviate_url:
    description: 'URL of the Weaviate instance'
    required: true
  weaviate_api_key:
    description: 'API key for authenticating with Weaviate. Default: empty'
    required: false
    default: ''
  github_token:
    description: 'GitHub token to access issues'
    required: true
  target_repository:
    description: 'Name of the GitHub repository to fetch issues from (optional, defaults to current repo). Format: owner/repo, for example: weaviate/weaviate'
    required: false
  collection_name:
    description: 'Weaviate collection name to store the vectorized issues. Default: GitHubIssues'
    required: false
    default: 'GitHubIssues'
  vectorizer:
    description: 'Vectorizer to use for the issues. Supported: text2vec-weaviate, text2vec-openai, text2vec-cohere, text2vec-jinaai, text2vec-ollama, text2vec-transformers, text2vec-contextionary'
    required: false
    default: 'text2vec-weaviate'
  batch_size:
    description: 'Number of issues to process in a single batch'
    required: false
    default: '100'
  state:
    description: 'State of the issues to fetch (all, open, closed)'
    required: false
    default: 'all'
  include_comments:
    description: 'Whether to include issue comments in the vectorization (true/false)'
    required: false
    default: 'true'


runs:
  using: 'docker'
  image: 'Dockerfile'
  env:
    GITHUB_TOKEN: ${{ inputs.github_token }}
    WEAVIATE_URL: ${{ inputs.weaviate_url }}
    WEAVIATE_API_KEY: ${{ inputs.weaviate_api_key }}
    TARGET_REPOSITORY: ${{ inputs.target_repository }}
    COLLECTION_NAME: ${{ inputs.collection_name }}
    VECTORIZER: ${{ inputs.vectorizer }}
    BATCH_SIZE: ${{ inputs.batch_size }}
    STATE: ${{ inputs.state }}
    INCLUDE_COMMENTS: ${{ inputs.include_comments }}

branding:
  icon: 'database'
  color: 'green'

